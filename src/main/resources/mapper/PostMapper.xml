<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.board.domain.post.mapper.PostMapper">
	<resultMap id="postResponse"
		type="com.example.board.domain.post.dto.response.PostResponse">
		<id property="postId" column="id" />
		<result property="status" column="status" />
		<result property="title" column="title" />
		<result property="author" column="author" />
		<result property="viewCount" column="view_count" />
		<result property="likeCount" column="like_count" />
		<result property="createdAt" column="created_at" />
	</resultMap>

	<resultMap id="fileResponseMap" type="com.example.board.domain.file.dto.response.FileResponse">
	    <id property="fileId" column="file_id" />
		<result property="originalFileName" column="original_file_name"/>
		<result property="fileSize" column="file_size"/>
		<result property="fileType" column="file_type"/>
	</resultMap>

	<resultMap id="postDetailResponse" type="com.example.board.domain.post.dto.response.PostDetailResponse">
		<id property="postId" column="id" />
		<result property="status" column="status" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="author" column="author" />
		<result property="viewCount" column="view_count" />
		<result property="likeCount" column="like_count" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at"/>
		<result property="isUpdated" column="is_updated" /> 
		<collection property="files" javaType="java.util.ArrayList" resultMap="fileResponseMap" />
	</resultMap>

	<select id="getAll" resultMap="postResponse">
		SELECT * FROM (
			SELECT a.*, ROWNUM rnum
				FROM (
					SELECT id, status, title, author, view_count, like_count, created_at
					FROM t_board_post
					<where>
						<if test="keyword != null and keyword != ''">
							title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%'
						</if>
					</where>
					<choose>
	                    <when test="sort != null and sort.name() == 'LATEST'">
	                        ORDER BY id DESC
	                    </when>
	                    <when test="sort != null and sort.name() == 'OLDEST'">
	                        ORDER BY id ASC
	                    </when>
	                    <when test="sort != null and sort.name() == 'MOST_VIEWED'">
	                        ORDER BY view_count DESC
	                    </when>
						<otherwise>
							ORDER BY id DESC
						</otherwise>
					</choose>
				) a
			WHERE ROWNUM &lt;= #{offset} + #{pageSize}
			)
		WHERE rnum &gt; #{offset}
	</select>

	<select id="countAllPosts">
		SELECT COUNT(*) FROM t_board_post
			<where>
				<if test="keyword != null and keyword != ''">
					title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%'
				</if>
			</where>
	</select>

	<insert id="add">
		<selectKey keyProperty="postId" resultType="long" order="AFTER">
			SELECT seq_t_board_post.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO t_board_post(title, content, author)
		VALUES(#{title}, #{content}, #{author})
	</insert>

	<select id="get" resultMap="postDetailResponse">
		SELECT 
			p.id, 
			p.status, 
			p.title, 
			p.content, 
			p.author, 
			p.view_count,
			p.like_count,
			p.created_at, 
			p.updated_at,
			CASE 
				WHEN p.created_at != p.updated_at THEN 1
				ELSE 0
			END AS is_updated,
			f.id AS file_id,
			f.original_file_name,
			f.file_size,
			f.file_type
		FROM 
			t_board_post p
		LEFT JOIN
			t_board_file f ON p.id = f.post_id
		WHERE 
			p.id=#{postId}
	</select>
	
	<update id="update">
		UPDATE t_board_post
		SET
			title=#{request.title},
			content=#{request.content},
			author=#{request.author}
		WHERE id=#{postId}
	</update>
	
	<update id="delete">
		UPDATE t_board_post
		SET 
			title=#{deletedTitle},
			status='DELETED'
		WHERE id=#{postId} 
	</update>
	
	<update id="incrementViewCount">
		UPDATE t_board_post
		SET
			view_count = view_count + 1
		WHERE id=#{postId}
	</update>
	
	<update id="incrementLikeCount">
		UPDATE t_board_post
		SET
			like_count = like_count + 1
		WHERE id=#{postId}
	</update>
	
	<update id="decrementLikeCount">
		UPDATE t_board_post
		SET
			like_count = like_count - 1
		WHERE id=#{postId}
	</update>
</mapper>